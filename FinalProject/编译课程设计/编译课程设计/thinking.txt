语义检查:
函数返回return语句的关键点思考
1.无返回值的函数存在返回值语句
2.有返回值的函数:
    1.是否有返回值
    2.返回类型检查
    3.返回逻辑点检查(是否存在分支导致无返回值)--->控制逻辑分析法

case的几个数值不可以出现相同的情况

语义检查:
1.＜标识符＞‘[’＜表达式＞‘]’需要检查: 标识符对应的是不是数组 如果是数组,表达式对应的下标值是否超数组长度,不确定值的话报个warning
2.＜标识符＞[‘(’<值参数表>‘)’]  --> 若是单纯的标识符,检查是不是普通变量、常量或者有返回值无参数的函数; 若是标识符(参数表)模式,
首先检查标识符是否是有返回值的，其次是否有参数，参数个数对不对，各参数类型是否匹配
3.＜标识符＞＝＜表达式＞|＜标识符＞‘[’＜表达式＞‘]’=＜表达式＞  --->检查：如果标识符或者标识符[index]为char类型,则=后面的表达式必须为单字符
4.<表达式>需要有一个最终的属性,即<表达式>最终是char还是int,如果只是单个的char则就为char,否则为int
    其值能否确定
5.switch()中必须使用4中获得最终属性,传递给情况子语句,作为case的后面所带常量类型是否匹配的标准
6.scanf标识符必须为普通变量或者参数,其余的均为不可
7.类型检查
8.分语法结构检查

switch(表达式)


//语法结构检查存在的问题
int x{
    return 10;    ----->此处报错不好,会直接跳过void main()的分析,为何会出现缺少semicolon的问题
}

void main(){
    int a[23];
    a[1] = x;
    printf("hahaha:",a[1]);
    return;
}


//表达式里面嵌入'*','+'等如何解决